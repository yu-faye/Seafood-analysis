{
  "name": "FishingEventsProcessingPipeline",
  "properties": {
    "description": "Pipeline to fetch and process Global Fishing Watch fishing events data for port visit analysis",
    "activities": [
      {
        "name": "GetGfwApiToken",
        "type": "WebActivity",
        "dependsOn": [],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 3,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": true
        },
        "typeProperties": {
          "url": "https://seafood-analysis-kv.vault.azure.net/secrets/gfwapitoken?api-version=7.4",
          "method": "GET",
          "authentication": {
            "type": "MSI",
            "resource": "https://vault.azure.net"
          }
        }
      },
      {
        "name": "SetGfwToken",
        "type": "SetVariable",
        "dependsOn": [
          {
            "activity": "GetGfwApiToken",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "typeProperties": {
          "variableName": "gfwToken",
          "value": {
            "value": "@activity('GetGfwApiToken').output.value",
            "type": "Expression"
          }
        }
      },
      {
        "name": "FetchFishingEventsFromGFW",
        "type": "Copy",
        "dependsOn": [
          {
            "activity": "SetGfwToken",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 3,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "userProperties": [],
        "typeProperties": {
          "source": {
            "type": "RestSource",
            "httpRequestTimeout": "00:01:40",
            "requestInterval": "00.00:00:00.010",
            "requestMethod": "POST",
            "additionalHeaders": {
              "Authorization": {
                "value": "@concat('Bearer ', variables('gfwToken'))",
                "type": "Expression"
              },
              "Content-Type": "application/json"
            },
            "requestBody": {
              "datasets": [
                "public-global-fishing-events:v3.0"
              ],
              "start-date": {
                "value": "@formatDateTime(addDays(utcnow(), -30), 'yyyy-MM-dd')",
                "type": "Expression"
              },
              "end-date": {
                "value": "@formatDateTime(utcnow(), 'yyyy-MM-dd')",
                "type": "Expression"
              },
              "event-types": [
                "port_visit",
                "fishing"
              ],
              "limit": 10000,
              "format": "json"
            }
          },
          "sink": {
            "type": "JsonSink",
            "storeSettings": {
              "type": "AzureBlobFSWriteSettings"
            },
            "formatSettings": {
              "type": "JsonWriteSettings"
            }
          },
          "enableStaging": false
        },
        "inputs": [
          {
            "referenceName": "GFWEventsAPI",
            "type": "DatasetReference"
          }
        ],
        "outputs": [
          {
            "referenceName": "RawFishingEventsData",
            "type": "DatasetReference"
          }
        ]
      },
      {
        "name": "LoadFishingEventsToSQL",
        "type": "Copy",
        "dependsOn": [
          {
            "activity": "FetchFishingEventsFromGFW",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 2,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "userProperties": [],
        "typeProperties": {
          "source": {
            "type": "DelimitedTextSource",
            "storeSettings": {
              "type": "AzureBlobFSReadSettings",
              "recursive": true,
              "enablePartitionDiscovery": false
            },
            "formatSettings": {
              "type": "DelimitedTextReadSettings"
            }
          },
          "sink": {
            "type": "AzureSqlSink",
            "writeBatchSize": 10000,
            "preCopyScript": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FishingEvents]') AND type in (N'U')) BEGIN CREATE TABLE [dbo].[FishingEvents] ( [EventId] NVARCHAR(100) NULL, [EventType] NVARCHAR(50) NULL, [VesselId] NVARCHAR(100) NULL, [PortId] NVARCHAR(50) NULL, [PortName] NVARCHAR(200) NULL, [StartTime] DATETIME2 NULL, [DurationHours] DECIMAL(18,4) NULL ) END"
          },
          "enableStaging": false,
          "translator": {
            "type": "TabularTranslator",
            "mappings": [
              {
                "source": {
                  "name": "event_id",
                  "type": "String"
                },
                "sink": {
                  "name": "EventId",
                  "type": "String"
                }
              },
              {
                "source": {
                  "name": "event_type",
                  "type": "String"
                },
                "sink": {
                  "name": "EventType",
                  "type": "String"
                }
              },
              {
                "source": {
                  "name": "vessel_id",
                  "type": "String"
                },
                "sink": {
                  "name": "VesselId",
                  "type": "String"
                }
              },
              {
                "source": {
                  "name": "port_id",
                  "type": "String"
                },
                "sink": {
                  "name": "PortId",
                  "type": "String"
                }
              },
              {
                "source": {
                  "name": "port_name",
                  "type": "String"
                },
                "sink": {
                  "name": "PortName",
                  "type": "String"
                }
              },
              {
                "source": {
                  "name": "start_time",
                  "type": "DateTime"
                },
                "sink": {
                  "name": "StartTime",
                  "type": "DateTime"
                }
              },
              {
                "source": {
                  "name": "duration_hours",
                  "type": "Decimal"
                },
                "sink": {
                  "name": "DurationHours",
                  "type": "Decimal"
                }
              }
            ]
          }
        },
        "inputs": [
          {
            "referenceName": "ProcessedFishingEventsData",
            "type": "DatasetReference"
          }
        ],
        "outputs": [
          {
            "referenceName": "FishingEventsTable",
            "type": "DatasetReference"
          }
        ]
      },
      {
        "name": "GeneratePortAnalysisInsights",
        "type": "SqlServerStoredProcedure",
        "dependsOn": [
          {
            "activity": "LoadFishingEventsToSQL",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 2,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "userProperties": [],
        "typeProperties": {
          "storedProcedureName": "sp_GeneratePortAnalysisInsights",
          "storedProcedureParameters": {
            "ProcessingDate": {
              "value": {
                "value": "@utcnow()",
                "type": "Expression"
              },
              "type": "DateTime"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "AzureSqlDatabase",
          "type": "LinkedServiceReference"
        }
      }
    ],
    "parameters": {
      
    },
    "variables": {
      "gfwToken": {
        "type": "String"
      },
      "processingDate": {
        "type": "String",
        "defaultValue": "@formatDateTime(utcnow(), 'yyyy-MM-dd')"
      }
    },
    "folder": {
      "name": "FishingAnalysis"
    },
    "annotations": [
      "fishing",
      "port_visit",
      "investment_analysis",
      "gfw"
    ]
  }
}
